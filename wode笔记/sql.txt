		数据库知识总结：

1.打开和关闭mysql:net start mysql   net stop mysql

2.drop 是对数据库的结构操作，delect是对内容进行操作。其他的也类似。

3.创建表的时候，语句是用“，”分隔，而不是用“；”，而且最后一条语句无需加“，”。

4.使用change改变列名的时候，类型、约束都要重新定义，如果是主键则不能重新定义。其他的内容不重新定义，都会变成默认值。

5.数据库的编码 没有utf-8 只有utf8 而且搞不懂为什么查看编码是 show create table 表名（为什么是create!）

6.插入列表时，用values 而不是value。

7.insert 有两种方式 一种是全选，第二种是选择部分，使用全选时直接表名后面跟values 就行 ，但是要注意里面的值必须都填写，意思就是有几列，你就要填写几列的值。

8.这儿有一个问题 set names gbk 和 alert table tbl_user character set gbk 的区别 ，这儿猜测 第一个是字段字符集编码，第二个是表字符集编码。

9.like in desc降 asc升

10.group by 分组 order by 排序

11.删除外键 ALTER TABLE 'product' DROP FOREIGN KEY 'product_fk';

12.内连接分为显示连接和隐式连接
	（1）内连接需要多表中相互存在对应数据，连接结果仅包含符合连接条件的行，参与连接的两个表都应该符合连接条件，from后面直接跟多个表名是隐式连接
	（2）显示连接是经过过滤的笛卡儿积，显示内连接比隐式内连接相同情况下更快。

13.连接结果不仅包含符合条件的行同时也包含自身不符合条件的行，情况分为三种，左外连接和右外连接以及全外连接。
	（1）左外连接：左边表数据行全部保留，右边表保留符合条件的行；
	（2）右外连接：左边表数据行保留符合条件的行，右边数据行全部保留；
	（3）全外连接：左外连接 union 右外连接。

14.关于分组的解释：假如一班有五个人，二班有六个人。假设我们要查询每个班级有多少人，如果你不用分组查询的话，结果是一条记录 --- (班级，所有人数)，如果使用查询，就能显示出正确结果（两条记录）。

	



		sql语句总结：

1.对数据库的操作
	（1）创建一个数据库：create database 库名;
	（2）创建带有编码的数据库：create database 库名 character set gbk;
	（3）查看编码：show create database 库名 ;
	（4）删除一个库：drop database 库名;
	（5）使用库：use database;
	（6）查看当前正在使用的库：select database();
2.对数据库表的操作：
	（0）创建一张表：create table 表名{
			字段名 类型（长度） [primary key auto_increment],
			字段名 类型（长度） [约束]，
			字段名 类型（长度） [约束]
		}
	（1）查看数据库表：show tables;
	（2）查看表的结构：desc 表名；
	（3）删除一张表：drop 表名；
	（4）添加一列：alter table 表名 add 字段名 类型（长度） [约束]；
	（5）修改列的类型：alter table 表名 modify 要修改的字段名 类型（长度） [约束]；
	（6）修改列的列名：alter table 表名 change 旧列名 新列名 类型（长度） [约束]；
	（7）删除表的列：alter table 表名 drop 列名；
	（8）修改表名：rename table 表名 to 新表名；
	（9）修改表的字符集：alter table 表名 character set gbk;
	（10）查看当前表的编码：show create table 表名；
3.对表记录进行操作：
	（1）插入记录：insert into 表名（列名1，列名2，列名3...） values(值1，值2，值3...);
		       insert into 表名 values（值1，值2，值3...）;
	（2）修改记录：update 表名 set 字段名=值，字段名=值，字段名=值...;
		       update 表名 set 字段名=值，字段名=值，字段名=值... where 条件；
	（3）删除记录：delete from 表名；
		       delete from 表名 where 条件；
		       1）这种方式删除记录是一条一条的删除，之后配合事务可以找回,而且如果设置了值自增的话，不会重置
				start transaction;
				delete from 表名；
				rollback;
	（4）删除记录的不同方法：truncate table 表名；
		       1）这种方式是将整个表摧毁，然后在创建一张一摸一样的表，删除的数据无法找回，而且会清除值自增的				  约束
	（5）查询操作：select * from 表名；
		       select 字段名1，字段名2，字段名3... from 表名;
		       select * from 表名 as 别名;
		       select 字段名1 as 别名，字段名2，字段名3...;
		       select distinct(字段名) from 表名；
		       select 字段名1+10，字段名2，字段名3...;
		       select * from 表名 where 条件;
		       select * from 表名 where 字段名 like '%XX%';
		       select * from 表名 where 字段名 in(3，6，9);
		       select avg(字段名) from 表名;
		       select sum(字段名) from 表名;
		       select count(字段名） from 表名；
	（6）排序：select 字段名1，字段名2... from 表名 order by 字段名1 asc/desc;
	（7）分组：select 字段名1，字段名2... from 表名 group by 字段名1 having 条件；
	（8）分组和排序总结：group by + having + order by
	（9）解决乱码：set names gbk;


	

		多表查询总结：

1.外键声明：alter table 从表 add constraint 外键名称 foreign key(从表外键字段名) references 主表（主表的主键）；

2.表与表的关系：一对一、一对多（老师和学生）、多对多（学生和课程）

3.隐式内连接：select * from 表1，表2 where 条件；
	 例子：select * from 表1 别名，表2 where 表1别名.字段名 = 表2别名.字段名
  显示内连接：select * from 表1 inner join 表2 on 条件；
  左外连接：select * from 表1 left outer join 表2 on 条件；
  右外连接：select * from 表1 right outer join 表2 on 条件；

4.子查询：一条select语句结果作为另一条select语法的一部分

select a.study,b.classname from study a,classes b where a.classid(+)=b.classid; ---- (+)代表外连接，放在左边左外连接，放在右边右外连接


