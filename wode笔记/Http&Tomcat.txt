		总结：

1.Tomcat发布工程可能遇到的两个问题：
	（1）：有时候发布工程后，发现工程的名称写错了，此时改名后在发布可能会出现404服务器为找到资源现象，这是因为在的你工程第一次发布到服务器时，服务器会自动创建一个和连接你本地工程的映射，即使你工程改名，但这个映射名不会变，服务器是根据这个映射来找资源的，所以需要把这个映射名也改过来才行。项目右键属性 --> Web Project Settings --> Context root
	（2）：工程发布到服务器有两个步骤，一是把WebContent这个文件夹下的所有内容拷贝到Tomcat服务器WebApps的文件目录下，然后再把这个内容发布上去。问题可能出现在，你把已发布过的工程从Tomcat服务器中移除（相当于从WebApps文件夹下把这个工程文件删掉），然后你在发布一次，可能就会报错了。原因是，你发布此工程后服务器已经在web.xml配置文件中留下了记录，它会根据这个配置文件以为次工程已经发布了，所以你无法在发布一遍，解决办法是把服务器的配置文件中关于这个工程的记录信息删掉。server.xml会在文件末尾部分的<Host>...</Host>中多出来一个<Content..../>标签，删除即可。

2.请求报文：请求行、请求头、请求体
	（1）请求行：请求方式、请求的资源、协议版本
	（2）请求头：客户端发送给服务器端的一些信息，使用键值对表示key：value
		比较重要的请求头内容：
		Referer:通知服务器，当前请求来自何处
		If-Modified-Since:本地缓存的最后变更时间，于另一个响应头组合控制浏览器页面的缓存。
		Cookie:与会话有关技术，用于存放浏览器缓存的cookie信息
		User-Agent:浏览器与操作系统相关信息
		Connection:保持连接状态
		Host:请求的服务器主机名
		Content-Length:请求体的长度
		Conten-Type:如果是post请求,会有这个头,表示请求体内容使用的url编码
		Accept:浏览器可支持的MIME类型。文件类型的一种描述方式。
			例如 text/html(html文件)、text/html(css文件)...
		Accept-Encoding:浏览器通知服务器，浏览器支持的数据压缩格式
		Accept-Language:浏览器通知服务器，浏览器支持的语言。
	（3）请求体：发送给服务器的HTTP数据体
		请求方式是post时：如 username=zhangsan&password=123
		请求方式是get时，数据体拼接在url地址后面：如 http://localhost:8080...?username=zhangsan&password=123

  响应报文：响应行、响应头、响应体
	（1）响应行：协议版本、状态码、状态信息
		状态码：	200：请求成功
				302：请求重定向
				304：请求资源没有改变，访问本地缓存
				404：请求资源不存在，路径编写错误或者资源以删除
				500：服务器内部错误，通常服务器抛异常
	（2）响应头：也是以键值对形式，重要的有
		Location：指定响应的路径，与状态码302配合使用，完成跳转
		Content-Type:响应正文的类型，取值：text/html;charset=UTF-8
		Content-Disposition:通知浏览器以下载方式解析正文，取值：attachment;filename=xx.zip
		Set-Cookie:与会话相关技术。服务器向浏览器写入cookie
		Content-Encoding:服务器使用的压缩格式
		Content-length:响应正文的长度
		Refresh:定时刷新
		Server:服务器名称
		Last-Modified:服务器通知浏览器，文件的最后修改时间。
	（3）响应体：服务器写给浏览器的页面正文（html）
				
3.浏览器和服务器的交互过程
	浏览器将要请求的内容封装成请求报文，然后浏览器想服务器发起请求，也就是将请求报文发送给服务器，服务器接受这些请求并处理，然后将结果封装成响应报文，给浏览器一个对应的响应，也就是把响应报文发送给浏览器，由浏览器进行显示。

4.B/S系统 浏览器/服务器
  C/S     客户端/服务器

5.请求的url地址：协议-服务器（服务器的唯一域名，映射到一个IP）-端口（不指定默认80）-路径-资源名称

6.Tomcat目录结构：
	bin:脚本目录
	conf:配置目录
		配置文件目录：config
		核心配置文件：server.xml
		用户权限配置文件：tomcat-user.xml
		所有web项目默认配置文件：web.xml
	lib:依赖jar库目录--tomcat和web项目中需要使用到的jar包
	logs：日志文件
	temp:临时文件目录，文件夹内容可以随意删除
	webapps:默认发布web项目所存放的目录
	work：tomcat处理JSP的工作目录

7.tomcat的作用：浅显的来说，tomcat负责处理客户端（浏览器）的请求和响应，工程运行会把webapps下的所有内容和java编译后的class文件发布到（复制）到tomcat目录下（针对本机），然后大概是由tomcat来负责调度、管理（xml）。客户端把请求发给web服务器，web在把请求和控制权给servlet，servlet处理完毕后，把结果转交给服务器，由服务器把响应（结果的封装）给客户端。
	